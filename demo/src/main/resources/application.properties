# 驱动配置信息
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/service?useUnicode=true&characterEncoding=utf-8
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
 
#连接池的配置信息
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#连接池启动时创建的初始连接数量
spring.datasource.initialSize=5
#始终保留在池中的最小连接数，池中的连接数量若低于此值则创建新的连接，如果连接验证失败将缩小至此值
spring.datasource.minIdle=5
#连接池同一时间可分配的最大活跃连接数
spring.datasource.maxActive=20
#最大等待时间（毫秒），如果在没有连接可用的情况下等待超过此时间，则抛出异常
spring.datasource.maxWait=60000
#在空闲连接回收器线程运行期间休眠时间（毫秒）， 该值不应该小于 1 秒，它决定线程多久验证空闲连接或丢弃连接的频率
spring.datasource.timeBetweenEvictionRunsMillis=60000
#连接在池中保持空闲而不被回收的最小时间（毫秒）
spring.datasource.minEvictableIdleTimeMillis=300000
#SQL 查询验证超时时间（秒），小于或等于 0 的数值表示禁用
spring.datasource.validationQuery=SELECT 1 FROM DUAL
#对池中空闲的连接是否进行验证，验证失败则回收此连接
spring.datasource.testWhileIdle=true
#当从连接池中取出一个连接时是否进行验证，若验证失败则从池中删除该连接并尝试取出另一个连接
spring.datasource.testOnBorrow=false
#当一个连接使用完归还到连接池时是否进行验证
spring.datasource.testOnReturn=false
#自动提交从池中返回的连接
spring.datasource.autoCommit=true
#等待来自池的连接的最大毫秒数
spring.datasource.connectionTimeout=30000

spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 显示后台处理的SQL语句
spring.jpa.show-sql=true
# 自动检查实体和数据库表是否一致，如果不一致则会进行更新数据库表
spring.jpa.hibernate.ddl-auto=update
#端口
server.port=8080